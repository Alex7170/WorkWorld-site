const express = require("express")
const router = express.Router()
const methodOvveride = require("method-override")
const controller = require("../controllers/myPage")
const passport = require("passport")
const urlencodedParser = express.urlencoded({extended: false});
router.use(methodOvveride("_method"))
router.get("/myPage/:id", passport.authenticate('jwt', {session:false}), controller.getMyPage)
router.get("/myPage/profile/:id", passport.authenticate('jwt', {session:false}), controller.getProfile)
router.put("/myPage/profile/:id", passport.authenticate('jwt', {session:false}), controller.updateUser)
router.get("/myPage/messages", passport.authenticate('jwt', {session:false}), controller.getMessages)
router.get("/myPage/messages/newMessage", passport.authenticate('jwt', {session:false}), controller.getNewMessage)
router.post("/mypage/messages/newMessage", passport.authenticate('jwt', {session:false}), controller.newMessage)
router.get("/myPage/messages/:id", passport.authenticate('jwt', {session:false}), controller.getOneMessage)
router.delete("/myPage/messages/:id", passport.authenticate('jwt', {session:false}), controller.deleteOneMessage)
router.get("/myPage/messages/messagesSend", passport.authenticate('jwt', {session:false}), controller.getMessagesSend)
router.get("/myPage/messages/messagesGot", passport.authenticate('jwt', {session:false}), controller.getMessagesGot)
router.get("/myPage/myRequests:id", passport.authenticate('jwt', {session:false}), controller.getMyRequests)
router.delete("/myPage/myRequests/:id", passport.authenticate('jwt', {session:false}), controller.deleteRequest)
router.get("/myPage/myRequests/:id", passport.authenticate('jwt', {session:false}), controller.getUpdateRequest)
router.put("/myPage/myRequests/:id", passport.authenticate('jwt', {session:false}), controller.updateRequest)
router.get("/myPage/myRequests/newRequest", passport.authenticate('jwt', {session:false}), controller.getNewRequest)
router.post("/myPage/myRequests/newRequest", passport.authenticate('jwt', {session:false}), controller.newRequest)
module.exports = router